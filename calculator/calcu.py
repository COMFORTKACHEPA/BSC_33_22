# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'calculator.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon
from pathlib import Path
from pathlib import Path
path = Path(__file__).parent / 'icons8-calculator-50.png'


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.setFixedSize(357, 415)
        Form.setWindowTitle("calculator")
        self.lineEdit = QtWidgets.QLCDNumber(Form)
        self.lineEdit.setGeometry(QtCore.QRect(40, 50, 261, 41))
        self.lineEdit.setObjectName("lineEdit")
        self.one = QtWidgets.QPushButton(Form)
        self.one.setGeometry(QtCore.QRect(30, 130, 93, 41))
        self.one.setObjectName("one")
        self.four = QtWidgets.QPushButton(Form)
        self.four.setGeometry(QtCore.QRect(120, 170, 93, 41))
        self.four.setObjectName("four")
        self.seven = QtWidgets.QPushButton(Form)
        self.seven.setGeometry(QtCore.QRect(30, 250, 93, 41))
        self.seven.setObjectName("seven")
        self.nine = QtWidgets.QPushButton(Form)
        self.nine.setGeometry(QtCore.QRect(30, 290, 93, 41))
        self.nine.setObjectName("nine")
        self.two = QtWidgets.QPushButton(Form)
        self.two.setGeometry(QtCore.QRect(120, 130, 93, 41))
        self.two.setObjectName("two")
        self.five = QtWidgets.QPushButton(Form)
        self.five.setGeometry(QtCore.QRect(30, 210, 93, 41))
        self.five.setObjectName("five")
        self.eight = QtWidgets.QPushButton(Form)
        self.eight.setGeometry(QtCore.QRect(120, 250, 93, 41))
        self.eight.setObjectName("eight")
        self.zero = QtWidgets.QPushButton(Form)
        self.zero.setGeometry(QtCore.QRect(120, 290, 93, 41))
        self.zero.setObjectName("zero")
        self.three = QtWidgets.QPushButton(Form)
        self.three.setGeometry(QtCore.QRect(30, 170, 93, 41))
        self.three.setObjectName("three")
        self.pushButton_6 = QtWidgets.QPushButton(Form)
        self.pushButton_6.setGeometry(QtCore.QRect(120, 210, 93, 41))
        self.pushButton_6.setObjectName("pushButton_6")
        self.answer = QtWidgets.QPushButton(Form)
        self.answer.setGeometry(QtCore.QRect(210, 290, 93, 81))
        self.answer.setObjectName("answer")
        self.plus = QtWidgets.QPushButton(Form)
        self.plus.setGeometry(QtCore.QRect(210, 130, 93, 41))
        self.plus.setObjectName("plus")
        self.minus = QtWidgets.QPushButton(Form)
        self.minus.setGeometry(QtCore.QRect(210, 210, 93, 41))
        self.minus.setObjectName("minus")
        self.muliti = QtWidgets.QPushButton(Form)
        self.muliti.setGeometry(QtCore.QRect(210, 170, 93, 41))
        self.muliti.setObjectName("muliti")
        self.clear = QtWidgets.QPushButton(Form)
        self.clear.setGeometry(QtCore.QRect(30, 330, 93, 41))
        self.clear.setObjectName("clear")
        self.point = QtWidgets.QPushButton(Form)
        self.point.setGeometry(QtCore.QRect(120, 330, 93, 41))
        self.point.setObjectName("point")
        self.divide = QtWidgets.QPushButton(Form)
        self.divide.setGeometry(QtCore.QRect(210, 250, 93, 41))
        self.divide.setObjectName("divide")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.one.setText(_translate("Form", "1"))
        self.one.clicked.connect(self.val1)
        self.four.setText(_translate("Form", "4"))
        self.four.clicked.connect(self.val4)
        self.seven.setText(_translate("Form", "7"))
        self.seven.clicked.connect(self.val7)
        self.nine.setText(_translate("Form", "9"))
        self.nine.clicked.connect(self.val9)
        self.two.setText(_translate("Form", "2"))
        self.two.clicked.connect(self.val2)
        self.five.setText(_translate("Form", "5"))
        self.five.clicked.connect(self.val5)
        self.eight.setText(_translate("Form", "8"))
        self.eight.clicked.connect(self.val8)
        self.zero.setText(_translate("Form", "0"))
        self.zero.clicked.connect(self.val0)
        self.three.setText(_translate("Form", "3"))
        self.three.clicked.connect(self.val3)
        self.pushButton_6.setText(_translate("Form", "6"))
        self.pushButton_6.clicked.connect(self.val6)
        self.answer.setText(_translate("Form", "="))
        self.answer.clicked.connect(self.valanswe)

        self.plus.setText(_translate("Form", "+"))
        self.plus.clicked.connect(self.valplus)
        
        self.minus.setText(_translate("Form", "-"))
        self.minus.clicked.connect(self.valminus)

        self.muliti.setText(_translate("Form", "*"))
        self.muliti.clicked.connect(self.valmuilt)

        self.clear.setText(_translate("Form", "c"))
        self.clear.clicked.connect(self.clea)
        self.point.setText(_translate("Form", "."))
        self.point.clicked.connect(self.valpoint)

        self.divide.setText(_translate("Form", "/"))
        self.divide.clicked.connect(self.valdivide)


# number  set after clicked
    def val1(self):
         if '=' in str(int(self.lineEdit.value())):
             self.lineEdit.display("")
         val = self.one.text()
         vall = str(int(self.lineEdit.value()))
         if self.lineEdit.value()==0:
             self.lineEdit.display(val)
         else:
             self.lineEdit.display(vall + val)

    
    def val2(self):
        if '=' in str(int(self.lineEdit.value())):
             self.lineEdit.display("")
        val = self.two.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)
        
    def val3(self):
        if '=' in str(int(self.lineEdit.value())):
             self.lineEdit.display("")
        val = self.three.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)

         

    def val4(self):
        if '=' in str(int(self.lineEdit.value())):
             self.lineEdit.display("")
        val = self.four.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)

    def val5(self):
        if '=' in str(int(self.lineEdit.value())):
             self.lineEdit.display("")
        val = self.five.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)

    def val6(self):
        if '=' in str(int(self.lineEdit.value())):
             self.lineEdit.display("")
        val = self.pushButton_6.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)
         
    def val7(self):
        if '=' in str(int(self.lineEdit.value())):
             self.lineEdit.display("")
        val = self.seven.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)
          

    def val8(self):
        if '=' in str(int(self.lineEdit.value())):
             self.lineEdit.display("")
        val = self.eight.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)


    def val9(self):
        if '=' in str(int(self.lineEdit.value())):
             self.lineEdit.display("")
        val = self.nine.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)


    def val0(self):
        if '=' in str(int(self.lineEdit.value())):
             self.lineEdit.display("")
        val = self.zero.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)

#sybol set after click
    def valplus(self):
        val = self.plus.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)

    def valminus(self):
        val = self.minus.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)

    def valdivide(self):
        val = self.divide.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)
    def valmuilt(self):
        val = self.muliti.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)

    def valpoint(self):
        val = self.point.text()
        vall = str(int(self.lineEdit.value()))
        if self.lineEdit.value()==0:
             self.lineEdit.display(val)
        else:
             self.lineEdit.display(vall + val)


    

# clear set after click
        
    def clea(self):
            c = len(self.clear.text())-2
            value = str(int(self.lineEdit.value()))[:c]
            self.lineEdit.display(value)

    answeboxx = int('0')
#answer implement function
    def valanswe(self,answeboxx):
       answebox = str(int(self.lineEdit.value()))
       if '+' in answebox:
           left,rigt = answebox.split("+")
           answeboxx = int(left) + int(rigt)
       elif '-' in answebox:
           left,rigt = answebox.split("-")
           answeboxx = int(left) - int(rigt)

       elif '*' in answebox:
           left,rigt = answebox.split("*")
           answeboxx = int(left) * int(rigt)
       elif '/' in answebox:
           left,rigt = answebox.split("/")
           answeboxx = int(left) / int(rigt)
       self.lineEdit.display(f"{answebox} = {answeboxx}")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    app.setApplicationName('calculator')
    app.setWindowIcon(QIcon(str(f"{path}")))
    Form.show()
    sys.exit(app.exec_())
